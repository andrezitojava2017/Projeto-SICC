/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Controller.Abertura_Assinaturas_Controller;
import Controller.Enderecos_Controller;
import Controller.Ficha_Assinatura_Controller;
import Controller.Lancamento_Controller;
import Controller.Localizar_Controller;
import Controller.Pessoas_Controller;
import Controller.Selos_Controller;
import Model.Abertura_Assinatura_Model;
import Model.Codigo_Atos_Model;
import Model.Enderecos_Model;
import Model.Ficha_Assinatura_Model;
import Model.Pessoas_Model;
import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.text.DateFormat;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.Date;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Jederson Andre
 */
public class Abertura_Assinatura_View extends javax.swing.JFrame {

    private int id_pessoa, id_endereco;

    /**
     * Creates new form cadastroPessoas
     */
    public Abertura_Assinatura_View() {
        initComponents();
        carregarInfo();
        Abertura_Assinatura_Model a = new Abertura_Assinatura_Model();
        Abertura_Assinaturas_Controller lerArquivo = new Abertura_Assinaturas_Controller();
        campoDestinoCopiaFicha.setText(lerArquivo.abrirLocalFicha(a));

    }

    /**
     * Metodo que ira preencher o campoSelo com o ultimo selo recuperado da
     * tabela de selos este metodo INICIA NO CONSTRUTOR DESTA CLASSE
     */
    private void carregarInfo() {
        // objeto tipo Selos_controller para chamar objeto da classe DAO
        Selos_Controller ultimo_selo = new Selos_Controller();

        // objeto tipo Pessoas_controller para chamar o objeto da classe DAO e capturar a sqcia de fichas
        Pessoas_Controller captFicha = new Pessoas_Controller();

        // vetor que ira armazenar o retorno do metodo
        String ultimoSelo[];

        // capturando o retorno do metoto que faz a leitura do ultimo selo
        ultimoSelo = ultimo_selo.capturarSelo();

        // definindo valor do campoSelo
        campoSelo.setText(ultimoSelo[0] + ultimoSelo[1]);
        campoProximoSelo.setText(ultimoSelo[0] + ultimoSelo[2]);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblData = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        campoSelo = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        campoNumeroFicha = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        campoCusto = new javax.swing.JFormattedTextField();
        jLabel21 = new javax.swing.JLabel();
        campoProximoSelo = new javax.swing.JTextField();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        JPDadosPessoais = new javax.swing.JPanel();
        comboEstadoResidencia = new javax.swing.JComboBox();
        jLabel18 = new javax.swing.JLabel();
        campoCidadeResidencia = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        campoBairro = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        campoComplemento = new javax.swing.JTextField();
        campoEndereco = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        campoMae = new javax.swing.JTextField();
        campoPai = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        campoDataNascimento = new javax.swing.JFormattedTextField();
        campoCPF = new javax.swing.JFormattedTextField();
        jLabel3 = new javax.swing.JLabel();
        campoDataExpedicao = new javax.swing.JFormattedTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        campoIdentidade = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        campoOrgaoExpeditor = new javax.swing.JTextField();
        campoNome = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        campoID = new javax.swing.JTextField();
        btnLocalizar = new javax.swing.JButton();
        jLabel20 = new javax.swing.JLabel();
        comboNacionalidade = new javax.swing.JComboBox<>();
        jLabel22 = new javax.swing.JLabel();
        comboEstadoCivil = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        comboSexo = new javax.swing.JComboBox<>();
        jLabel23 = new javax.swing.JLabel();
        campoCidadeNascimento = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        comboEstadoNascimento = new javax.swing.JComboBox<>();
        jLabel25 = new javax.swing.JLabel();
        campoProfissao = new javax.swing.JTextField();
        btnVincularFicha = new javax.swing.JButton();
        check_Nao_Declarado = new javax.swing.JCheckBox();
        JPFicha = new javax.swing.JPanel();
        btnAddFicha = new javax.swing.JButton();
        campoOrigemFicha = new javax.swing.JTextField();
        campoDestinoCopiaFicha = new javax.swing.JTextField();
        btnCopiar = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        jToolBar1 = new javax.swing.JToolBar();
        btnSalvar = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JToolBar.Separator();
        btnConfirmarAlteracao = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        btnImprimirFicha = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JToolBar.Separator();
        btnSair = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cadastro de Pessoa");
        setBackground(new java.awt.Color(150, 166, 166));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        lblData.setText("Data");

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel5.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel5.setText("Ultimo selo:");

        campoSelo.setEditable(false);
        campoSelo.setFont(new java.awt.Font("Courier New", 0, 12)); // NOI18N

        jLabel14.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel14.setText("Numero da ficha:");

        campoNumeroFicha.setFont(new java.awt.Font("Courier New", 0, 12)); // NOI18N

        jLabel19.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel19.setText("Custo:");

        campoCusto.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        campoCusto.setFont(new java.awt.Font("Courier New", 0, 12)); // NOI18N

        jLabel21.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel21.setText("Proximo selo:");

        campoProximoSelo.setEditable(false);
        campoProximoSelo.setFont(new java.awt.Font("Courier New", 0, 12)); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(campoSelo, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel21)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(campoProximoSelo, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(campoNumeroFicha, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(jLabel19)
                .addGap(18, 18, 18)
                .addComponent(campoCusto, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(campoSelo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14)
                    .addComponent(campoNumeroFicha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19)
                    .addComponent(campoCusto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel21)
                    .addComponent(campoProximoSelo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N

        comboEstadoResidencia.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        comboEstadoResidencia.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "AC", "AL", "AM", "AP", "BA", "CE", "DF", "ES", "GO", "MA", "MG", "MS", "MT", "PA", "PB", "PE", "PI", "PR", "RJ", "RN", "RO", "RR", "RS", "SC", "SE", "SP", "TO" }));

        jLabel18.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel18.setText("Estado:");

        campoCidadeResidencia.setFont(new java.awt.Font("Courier New", 0, 12)); // NOI18N

        jLabel17.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel17.setText("Cidade:");

        jLabel12.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel12.setText("Bairro:");

        campoBairro.setFont(new java.awt.Font("Courier New", 0, 12)); // NOI18N

        jLabel13.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel13.setText("Complemento:");

        campoComplemento.setFont(new java.awt.Font("Courier New", 0, 12)); // NOI18N

        campoEndereco.setFont(new java.awt.Font("Courier New", 0, 12)); // NOI18N

        jLabel8.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel8.setText("Endereço:");

        jLabel7.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel7.setText("Mae:");

        campoMae.setFont(new java.awt.Font("Courier New", 0, 12)); // NOI18N

        campoPai.setFont(new java.awt.Font("Courier New", 0, 12)); // NOI18N

        jLabel6.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel6.setText("Pai:");

        jLabel11.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel11.setText("Nascimento:");

        try {
            campoDataNascimento.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        campoDataNascimento.setFont(new java.awt.Font("Courier New", 0, 12)); // NOI18N

        try {
            campoCPF.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jLabel3.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel3.setText("CPF:");

        try {
            campoDataExpedicao.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        campoDataExpedicao.setFont(new java.awt.Font("Courier New", 0, 12)); // NOI18N

        jLabel10.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel10.setText("Data expedição:");

        jLabel2.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel2.setText("Doc. identidade");

        campoIdentidade.setFont(new java.awt.Font("Courier New", 0, 12)); // NOI18N

        jLabel9.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel9.setText("Orgão expeditor:");

        campoOrgaoExpeditor.setFont(new java.awt.Font("Courier New", 0, 12)); // NOI18N

        campoNome.setFont(new java.awt.Font("Courier New", 0, 12)); // NOI18N
        campoNome.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));

        jLabel1.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel1.setText("Nome:");

        jLabel16.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel16.setText("Identificador:");

        campoID.setEditable(false);

        btnLocalizar.setText("Localizar");
        btnLocalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLocalizarActionPerformed(evt);
            }
        });

        jLabel20.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel20.setText("Nacionalidade:");

        comboNacionalidade.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        comboNacionalidade.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Brasileiro", "Estrangeiro" }));

        jLabel22.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel22.setText("Estado Civil:");

        comboEstadoCivil.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        comboEstadoCivil.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Solteiro", "Casado", "Divorciado", "Viuvo", "Convivente" }));

        jLabel4.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel4.setText("Sexo:");

        comboSexo.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        comboSexo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Masculino", "Feminino" }));

        jLabel23.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel23.setText("Cidade Nasc:");

        campoCidadeNascimento.setFont(new java.awt.Font("Courier New", 0, 12)); // NOI18N

        jLabel24.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel24.setText("Estado:");

        comboEstadoNascimento.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        comboEstadoNascimento.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "AC", "AL", "AM", "AP", "BA", "CE", "DF", "ES", "GO", "MA", "MG", "MS", "MT", "PA", "PB", "PE", "PI", "PR", "RJ", "RN", "RO", "RR", "RS", "SC", "SE", "SP", "TO" }));

        jLabel25.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel25.setText("Profissão:");

        campoProfissao.setFont(new java.awt.Font("Courier New", 0, 12)); // NOI18N

        btnVincularFicha.setText("Vincular ficha");
        btnVincularFicha.setEnabled(false);
        btnVincularFicha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVincularFichaActionPerformed(evt);
            }
        });

        check_Nao_Declarado.setText("Não declarado");
        check_Nao_Declarado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                check_Nao_DeclaradoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout JPDadosPessoaisLayout = new javax.swing.GroupLayout(JPDadosPessoais);
        JPDadosPessoais.setLayout(JPDadosPessoaisLayout);
        JPDadosPessoaisLayout.setHorizontalGroup(
            JPDadosPessoaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JPDadosPessoaisLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(JPDadosPessoaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(JPDadosPessoaisLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(campoCPF, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(campoDataNascimento, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4)
                        .addGap(2, 2, 2)
                        .addComponent(comboSexo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel25)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(campoProfissao)
                        .addGap(16, 16, 16))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, JPDadosPessoaisLayout.createSequentialGroup()
                        .addGroup(JPDadosPessoaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, JPDadosPessoaisLayout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(campoMae))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, JPDadosPessoaisLayout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(10, 10, 10)
                                .addComponent(campoPai)))
                        .addGap(18, 18, 18)
                        .addComponent(check_Nao_Declarado)
                        .addGap(301, 301, 301))
                    .addGroup(JPDadosPessoaisLayout.createSequentialGroup()
                        .addGroup(JPDadosPessoaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(JPDadosPessoaisLayout.createSequentialGroup()
                                .addComponent(jLabel16)
                                .addGap(18, 18, 18)
                                .addComponent(campoID, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnLocalizar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnVincularFicha))
                            .addGroup(JPDadosPessoaisLayout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(campoIdentidade, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(campoOrgaoExpeditor, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(campoDataExpedicao, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(JPDadosPessoaisLayout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(campoEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(campoBairro, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(JPDadosPessoaisLayout.createSequentialGroup()
                                .addComponent(jLabel13)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(campoComplemento, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel17)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(campoCidadeResidencia, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel18)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(comboEstadoResidencia, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(JPDadosPessoaisLayout.createSequentialGroup()
                                .addComponent(jLabel23)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(campoCidadeNascimento, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel24)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(comboEstadoNascimento, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(JPDadosPessoaisLayout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(campoNome, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel20)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(comboNacionalidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel22)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(comboEstadoCivil, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(27, 144, Short.MAX_VALUE))))
        );
        JPDadosPessoaisLayout.setVerticalGroup(
            JPDadosPessoaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JPDadosPessoaisLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(JPDadosPessoaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(campoID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLocalizar)
                    .addComponent(btnVincularFicha))
                .addGap(9, 9, 9)
                .addGroup(JPDadosPessoaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(campoNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20)
                    .addComponent(comboNacionalidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel22)
                    .addComponent(comboEstadoCivil, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(JPDadosPessoaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(campoIdentidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(campoDataExpedicao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(campoOrgaoExpeditor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(JPDadosPessoaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(comboSexo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(JPDadosPessoaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(campoCPF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel11)
                        .addComponent(campoDataNascimento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4)
                        .addComponent(jLabel25)
                        .addComponent(campoProfissao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(JPDadosPessoaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(campoCidadeNascimento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel24)
                    .addComponent(comboEstadoNascimento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(JPDadosPessoaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campoPai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(check_Nao_Declarado))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(JPDadosPessoaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(campoMae, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(JPDadosPessoaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(campoEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12)
                    .addComponent(campoBairro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(JPDadosPessoaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(JPDadosPessoaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel17)
                        .addComponent(campoCidadeResidencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(comboEstadoResidencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel18))
                    .addGroup(JPDadosPessoaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel13)
                        .addComponent(campoComplemento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Dados Pessoais", JPDadosPessoais);

        btnAddFicha.setText("Adicionar ficha:");
        btnAddFicha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddFichaActionPerformed(evt);
            }
        });

        campoOrigemFicha.setEditable(false);

        btnCopiar.setText("Copiar");
        btnCopiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCopiarActionPerformed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel15.setText("Destino da copia:");

        javax.swing.GroupLayout JPFichaLayout = new javax.swing.GroupLayout(JPFicha);
        JPFicha.setLayout(JPFichaLayout);
        JPFichaLayout.setHorizontalGroup(
            JPFichaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JPFichaLayout.createSequentialGroup()
                .addGroup(JPFichaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(JPFichaLayout.createSequentialGroup()
                        .addComponent(btnAddFicha)
                        .addGap(25, 25, 25))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, JPFichaLayout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addGap(18, 18, 18)))
                .addGroup(JPFichaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(campoOrigemFicha, javax.swing.GroupLayout.PREFERRED_SIZE, 588, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(JPFichaLayout.createSequentialGroup()
                        .addComponent(campoDestinoCopiaFicha, javax.swing.GroupLayout.PREFERRED_SIZE, 479, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnCopiar, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 165, Short.MAX_VALUE))
        );
        JPFichaLayout.setVerticalGroup(
            JPFichaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JPFichaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(JPFichaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAddFicha)
                    .addComponent(campoOrigemFicha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(JPFichaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campoDestinoCopiaFicha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCopiar)
                    .addComponent(jLabel15))
                .addContainerGap(302, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Vincular ficha", JPFicha);

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);

        btnSalvar.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        btnSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/success.png"))); // NOI18N
        btnSalvar.setText("Salvar dados");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });
        jToolBar1.add(btnSalvar);
        jToolBar1.add(jSeparator3);

        btnConfirmarAlteracao.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        btnConfirmarAlteracao.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/success.png"))); // NOI18N
        btnConfirmarAlteracao.setText("Confrimar Alteração");
        btnConfirmarAlteracao.setEnabled(false);
        btnConfirmarAlteracao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmarAlteracaoActionPerformed(evt);
            }
        });
        jToolBar1.add(btnConfirmarAlteracao);
        jToolBar1.add(jSeparator1);

        btnImprimirFicha.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        btnImprimirFicha.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/impressora.png"))); // NOI18N
        btnImprimirFicha.setText("Imprimir Ficha");
        btnImprimirFicha.setFocusable(false);
        btnImprimirFicha.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnImprimirFicha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImprimirFichaActionPerformed(evt);
            }
        });
        jToolBar1.add(btnImprimirFicha);
        jToolBar1.add(jSeparator2);

        btnSair.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        btnSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/stop_pequeno.png"))); // NOI18N
        btnSair.setText("Sair");
        btnSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSairActionPerformed(evt);
            }
        });
        jToolBar1.add(btnSair);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTabbedPane1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(lblData, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 517, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblData))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Metodo responsavel em preencher a tela de cadastro de pessoas
     *
     * @param idPessoa - int com o id recuperado do banco de dados
     */
    public void preencherCamposPessoas(int idPessoa) {

        // objeto MODEL
        Pessoas_Model pessoa;
        Enderecos_Model endereco;
        Ficha_Assinatura_Model ficha;

        // objetos CONTROLLER
        Enderecos_Controller localizar_endereco = new Enderecos_Controller();
        Localizar_Controller localizar_pessoa = new Localizar_Controller();
        Ficha_Assinatura_Controller localizar_ficha = new Ficha_Assinatura_Controller();

        // capturando dados
        pessoa = localizar_pessoa.capturarDadosPessoaSelecionada(String.valueOf(idPessoa));
        endereco = localizar_endereco.capturarDadosEndereco(String.valueOf(pessoa.getId_endereco()));
        ficha = localizar_ficha.Capturar_Dados_Ficha_Assinatura(idPessoa);

        if (ficha.getNumero_ficha() != 0) {
            btnVincularFicha.setEnabled(false);
        } else {
            btnVincularFicha.setEnabled(true);
        }

        // objeto para formatar as datas
        LocalDate data;
        DateTimeFormatter format = DateTimeFormatter.ofPattern("dd/MM/yyyy");

        campoID.setText(String.valueOf(pessoa.getId()));
        campoNome.setText(pessoa.getNome());
        campoIdentidade.setText(pessoa.getDocIdentidade());
        campoOrgaoExpeditor.setText(pessoa.getOrgaoExpeditor());
        data = LocalDate.parse(pessoa.getDataExpedicao());
        campoDataExpedicao.setText(format.format(data));
        campoCPF.setText(pessoa.getCpf());
        comboNacionalidade.setSelectedItem(pessoa.getNacionalidade());
        comboEstadoCivil.setSelectedItem(pessoa.getEst_civil());
        campoProfissao.setText(pessoa.getProfissao());
        data = LocalDate.parse(pessoa.getNascimento());
        campoDataNascimento.setText(format.format(data));
        campoCidadeNascimento.setText(pessoa.getCidade_nasc());
        comboEstadoNascimento.setSelectedItem(pessoa.getEstado_nasc());
        campoPai.setText(pessoa.getPai());
        campoMae.setText(pessoa.getMae());
        campoEndereco.setText(endereco.getNome_rua());
        campoBairro.setText(endereco.getBairro());
        campoComplemento.setText(endereco.getComplemento());
        campoCidadeResidencia.setText(endereco.getCidade_residencia());
        comboEstadoResidencia.setSelectedItem(endereco.getEstado_residencia());
        campoNumeroFicha.setText(String.valueOf(ficha.getNumero_ficha()));
        campoDestinoCopiaFicha.setText(ficha.getLocal_ficha());

        btnConfirmarAlteracao.setEnabled(true);

        // esses atributos sao carregado porque caso o usuario clique no botao salvar alteração
        // ja teremos os IDs necessario para atualizar o endereco e id da pessoa escolhida
        id_endereco = pessoa.getId_endereco();
        id_pessoa = pessoa.getId();
    }

    /**
     * Metodo que limpa todos os campos da tela de cadastro de pessoas.
     */
    private void limparCampos() {
        campoNome.setText("");
        campoIdentidade.setText("");
        campoDataExpedicao.setText("");
        campoCPF.setText("");
        campoBairro.setText("");
        campoComplemento.setText("");
        campoEndereco.setText("");
        campoNumeroFicha.setText("");
        campoMae.setText("");
        comboNacionalidade.setSelectedItem(null);
        campoPai.setText("");
        campoSelo.setText("");
        campoOrgaoExpeditor.setText("");
        campoDataNascimento.setText("");
        campoOrigemFicha.setText("");
        campoCidadeResidencia.setText("");
        campoID.setText("");

    }

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        // instanciando objeto tipo model
        Pessoas_Model dadosPessoa = new Pessoas_Model();
        Enderecos_Model endereco = new Enderecos_Model();
        Ficha_Assinatura_Model ficha = new Ficha_Assinatura_Model();

        int idPpessoa;

        // instanciando objeto tipo controller para chamar metodos de verificação
        Pessoas_Controller Salvar_Novo_Pessoa = new Pessoas_Controller();
        Enderecos_Controller Salvar_Novo_Endereco = new Enderecos_Controller();

        // capturando informações para enviar ao metodo que verifica preenchimento
        dadosPessoa.setNome(campoNome.getText());
        dadosPessoa.setDocIdentidade(campoIdentidade.getText());
        dadosPessoa.setOrgaoExpeditor(campoOrgaoExpeditor.getText());
        dadosPessoa.setDataExpedicao(campoDataExpedicao.getText());
        dadosPessoa.setNascimento(campoDataNascimento.getText());
        dadosPessoa.setProfissao(campoProfissao.getText());
        dadosPessoa.setEst_civil(comboEstadoCivil.getSelectedItem().toString());
        dadosPessoa.setSexo(comboSexo.getSelectedItem().toString());
        dadosPessoa.setCidade_nasc(campoCidadeNascimento.getText());
        dadosPessoa.setEstado_nasc(comboEstadoNascimento.getSelectedItem().toString());
        dadosPessoa.setCpf(campoCPF.getText());
        dadosPessoa.setNacionalidade(comboNacionalidade.getSelectedItem().toString());
        dadosPessoa.setNascimento(campoDataNascimento.getText());
        dadosPessoa.setPai(campoPai.getText());
        dadosPessoa.setMae(campoMae.getText());
        dadosPessoa.setLocalFicha(campoDestinoCopiaFicha.getText());

        endereco.setNome_rua(campoEndereco.getText());
        endereco.setBairro(campoBairro.getText());
        endereco.setComplemento(campoComplemento.getText());
        endereco.setCidade_residencia(campoCidadeResidencia.getText());
        endereco.setEstado_residencia(comboEstadoResidencia.getSelectedItem().toString());

        ficha.setLocal_ficha(campoDestinoCopiaFicha.getText());
        ficha.setNumero_ficha(Integer.parseInt(campoNumeroFicha.getText()));

        // chamando metodo que ira inserir o novo endereço na base de dados
        int id_end = Salvar_Novo_Endereco.inserir_Novo_Endereco(endereco);

        // se o retorno do metodo for o ID do novo endereço, entao fazemos a gravação da pessoa na base de dados
        if (id_end != 0) {

            // chamando metodo que ira salvar a nova pessoa na bse de dados
            // capturando o retorno com o ID do novo cadastro
            idPpessoa = Salvar_Novo_Pessoa.Inserir_Novo_Cadastro_Pessoa(dadosPessoa, id_end);

            // verificando se retornou o ID, caso sim, iremos gravar dados na tabela ficha de assinatura
            if (idPpessoa != 0) {

                // insanciando objeto controller
                Ficha_Assinatura_Controller nova_ficha = new Ficha_Assinatura_Controller();

                // chamando metdo que ira salvar a nova ficha na tabela ficha de assinatura
                int id_ficha = nova_ficha.Salvar_Nova_Ficha_Assinatura(idPpessoa, ficha);

                // se o ID retornar, podemos lançar na tabela abertura assinatura
                if (id_ficha != 0) {

                    // instanciando objetos controller
                    Selos_Controller selo_utilizado = new Selos_Controller();

                    // capturando o ultimo selo e o proximo selo que sera utilizado
                    String sequencia_selo[] = selo_utilizado.capturarSelo();

                    // capturando o custo do ato
                    double custo_ato = Double.parseDouble(campoCusto.getText().replace(",", "."));

                    // salvando o selo utilizado na tabela selos, retornando o ID do mesmo
                    int id_selo = selo_utilizado.gravarSelo(sequencia_selo[0], sequencia_selo[2], custo_ato);

                    // verificando se o ID retornou, assim podemos gravar os dados na tabela abertura de assinatura
                    if (id_selo != 0) {

                        // instanciando objeto controller
                        Abertura_Assinaturas_Controller gravar_novo_ato_abertura = new Abertura_Assinaturas_Controller();

                        // chamando metodo que faz a gravação na tabela abertura de assinatura, 
                        // passando como parametros o ID_SELO utilizado e o ID_PESSO que foi vinculada
                        int id_abertura = gravar_novo_ato_abertura.inserir_Ato_Abertura_Assinatura(id_selo, idPpessoa);

                        if (id_abertura != 0) {

                            // gravar dados da na tabela lançamentos
                            Lancamento_Controller lancamento = new Lancamento_Controller();
                            lancamento.salvarNovoLancamento(id_selo, Codigo_Atos_Model.CODIGO_ABERTURA_ASSINATURA, "Cartão de assinatura", custo_ato, id_abertura);

                        } else {
                            JOptionPane.showMessageDialog(this, "Não foi capturado o ID do ato Abertura de Assinatura.\nNão foi possivel gravar novo lançamento", "Mensagm", JOptionPane.ERROR_MESSAGE);
                        }

                    } else {
                        btnSalvar.requestFocus();
                    }
                } else {
                    campoNumeroFicha.requestFocus();
                }
            } else {
                campoNome.requestFocus();
            }
        } else {

            // focando no campo de endereço
            campoEndereco.requestFocus();
        }

    }//GEN-LAST:event_btnSalvarActionPerformed


    private void btnSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSairActionPerformed
        // TODO add your handling code here:

        dispose();
    }//GEN-LAST:event_btnSairActionPerformed

    private void btnAddFichaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddFichaActionPerformed
        // chamando o JFilechoose para localizar a imagem da ficha de assinatura
        // que sera salvo no BD (somente o endereço da imagem);

        // instanciado um objeto tipo JFileChooser( tela de localizar arquivos no JAVA)
        JFileChooser proc = new JFileChooser();

        //definindo a busca de todos os arquivos em todos os diretorios
        proc.setFileSelectionMode(JFileChooser.FILES_ONLY);

        //instanciando objeto do tipo filenameextnsionFilter, um filtro para exibir apenas extensoes pre-definidas
        FileNameExtensionFilter filtro = new FileNameExtensionFilter(("Imagens"), "jpg", "png", "jpeg");

        // passando o filtro para o JFileChosser
        proc.setFileFilter(filtro);

        //definindo o titulo da caixa de dialogo
        proc.setDialogTitle("Localizar cartao de assinatura");

        // capturando a ação do usuario (abriu o arquivo / se cancelou)
        int resposta = proc.showOpenDialog(null);

        //teste de verificação da resposta da ação capturada
        //caso tenho sido capturado a ação "abrir" ele pega o arquivo, o endereço completo e define como
        // texto no JTextField campoEndFicha, que sera armazenado no bd.
        if (resposta == JFileChooser.APPROVE_OPTION) {

            File img = proc.getSelectedFile();
            campoOrigemFicha.setText(img.getPath());

        } else {
            // caso a tela feche ou cancele
            campoOrigemFicha.setText("");
        }

    }//GEN-LAST:event_btnAddFichaActionPerformed

    private void btnCopiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCopiarActionPerformed
// instanciando objeto do tipo Path(caminho), q recupera dados do JTextFields
        Path origem = Paths.get(campoOrigemFicha.getText());
        Path destino = Paths.get(campoDestinoCopiaFicha.getText());

        try {
            //função que copia a ficha para o destino que esta no campoDestFicha,
            //aqui é feito um teste de verificacao, se existir o meso arquivo no destino, ele deleta e copia.
            Files.copy(origem, destino.resolve(origem.getFileName()));

            //atribuicao do caminho completo junto com o nome do arquivo, para ser gravado no BD
            campoDestinoCopiaFicha.setText(destino.resolve(origem.getFileName()).toString());

            JOptionPane.showMessageDialog(null, "Arquivo copiada com sucesso!");

        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, "Erro ao copiar, ARQUIVOS COM O  MESMO NOME\n" + ex);
        }

        btnSalvar.setEnabled(true);
    }//GEN-LAST:event_btnCopiarActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated

        Date data = new Date();
        DateFormat df = DateFormat.getDateInstance(DateFormat.FULL);
        lblData.setText(df.format(data));

    }//GEN-LAST:event_formWindowActivated

    private void btnLocalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLocalizarActionPerformed
        btnSalvar.setEnabled(false);
        campoNumeroFicha.setEditable(true);

        // instanciando objeto controller 
        Localizar_View_2 localizar = new Localizar_View_2(this, true);
        localizar.setVisible(true);

        // aqui fazemos o preenchimento dos campos na tela
        if (localizar.id_referencia != 0) {

            preencherCamposPessoas(localizar.id_referencia);
            btnSalvar.setEnabled(false);

        } else {

            JOptionPane.showMessageDialog(this, "Nenhuma pessoa selecionada", "ATENÇÃO", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnLocalizarActionPerformed

    private void btnConfirmarAlteracaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmarAlteracaoActionPerformed
        // instanciando objeto tipo model
        Pessoas_Model dadosPessoa = new Pessoas_Model();
        Enderecos_Model endereco = new Enderecos_Model();
        Ficha_Assinatura_Model ficha = new Ficha_Assinatura_Model();

        // instanciando objeto tipo controller para chamar metodos de verificação
        Pessoas_Controller Atualizar_Pessoa = new Pessoas_Controller();
        Enderecos_Controller Atualizar_Endereco = new Enderecos_Controller();

        // capturando informações para enviar ao metodo que verifica preenchimento
        dadosPessoa.setNome(campoNome.getText());
        dadosPessoa.setDocIdentidade(campoIdentidade.getText());
        dadosPessoa.setOrgaoExpeditor(campoOrgaoExpeditor.getText());
        dadosPessoa.setDataExpedicao(campoDataExpedicao.getText());
        dadosPessoa.setNascimento(campoDataNascimento.getText());
        dadosPessoa.setEst_civil(comboEstadoCivil.getSelectedItem().toString());
        dadosPessoa.setProfissao(campoProfissao.getText());
        dadosPessoa.setSexo(comboSexo.getSelectedItem().toString());
        dadosPessoa.setCidade_nasc(campoCidadeNascimento.getText());
        dadosPessoa.setEstado_nasc(comboEstadoNascimento.getSelectedItem().toString());
        dadosPessoa.setCpf(campoCPF.getText());
        dadosPessoa.setNacionalidade(comboNacionalidade.getSelectedItem().toString());
        dadosPessoa.setNascimento(campoDataNascimento.getText());
        dadosPessoa.setPai(campoPai.getText());
        dadosPessoa.setMae(campoMae.getText());
        dadosPessoa.setLocalFicha(campoDestinoCopiaFicha.getText());

        endereco.setNome_rua(campoEndereco.getText());
        endereco.setBairro(campoBairro.getText());
        endereco.setCidade_residencia(campoCidadeResidencia.getText());
        endereco.setComplemento(campoComplemento.getText());
        endereco.setEstado_residencia(comboEstadoResidencia.getSelectedItem().toString());

        ficha.setLocal_ficha(campoDestinoCopiaFicha.getText());
        ficha.setNumero_ficha(Integer.parseInt(campoNumeroFicha.getText()));

        // atualizando informações
        Atualizar_Endereco.salvarAlteracaoEndereco(endereco, id_endereco);
        Atualizar_Pessoa.salvarAlteracao(dadosPessoa, this.id_pessoa);

//        System.out.println("ID ENDERECO: " + id_endereco);
//        System.out.println("ID pessoa; " + id_pessoa);
    }//GEN-LAST:event_btnConfirmarAlteracaoActionPerformed

    private void btnImprimirFichaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImprimirFichaActionPerformed

        if (campoID.getText().isEmpty() || campoNumeroFicha.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Atenção nenhuma pessoa foi selecionada, verifique", "Mensagem", JOptionPane.INFORMATION_MESSAGE);
        } else {

// imprimir ficha selecionada
            int numeroFicha = Integer.parseInt(campoNumeroFicha.getText());
            int idPessoa = Integer.parseInt(campoID.getText());

            Abertura_Assinaturas_Controller abrirRel = new Abertura_Assinaturas_Controller();
            abrirRel.imprimirFicha(numeroFicha, idPessoa);

        }
    }//GEN-LAST:event_btnImprimirFichaActionPerformed

    private void btnVincularFichaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVincularFichaActionPerformed
        // vincular esta pessoa a uma ficha de assinatura
        // caso a pssoa não tenha um cartao d autografo, porem ja tinha um cadastro de pessoa lançado
        Ficha_Assinatura_Model ficha = new Ficha_Assinatura_Model();

        // captuando a ficha que foi fornecida pelo usuario
        ficha.setNumero_ficha(Integer.parseInt(campoNumeroFicha.getText()));

        // atribuindo ao objeto
        ficha.setLocal_ficha(campoDestinoCopiaFicha.getText());

        // instanciando objeto controller, para salvar o ato Abrtura de Assinatura
        Ficha_Assinatura_Controller gravar_ficha = new Ficha_Assinatura_Controller();

        // aqui iremos capturar o ID do ato, retorno da tabela Ficha d Assinatura
        int id_ficha = gravar_ficha.Salvar_Nova_Ficha_Assinatura(id_pessoa, ficha);

        // verificando o retorno do metodo de gravação
        if (id_ficha != 0) {

            // atributo que ira armazenar o selo que sera utilizado
            String selo[];

            // capturando o custo, que sera salvo na tabela de selos
            double custo_ato = Double.parseDouble(campoCusto.getText().replace(",", "."));

            // instanciando objeto para grava o selo utilizado
            Selos_Controller capturar_selo = new Selos_Controller();

            // capturando o selo
            selo = capturar_selo.capturarSelo();

            // capturando o retorno com o ID do sselo 
            int id_selo = capturar_selo.gravarSelo(selo[0], selo[2], custo_ato);

            // verificando se o retorno do metodo d gravação
            if (id_selo != 0) {

                // instanciando objeto para gravar na tabela Abertura de Assinatura
                Abertura_Assinaturas_Controller gravar_abertura = new Abertura_Assinaturas_Controller();

                // capturando o ID do ato da tabela Abertura de Assinatura
                int id_ato = gravar_abertura.inserir_Ato_Abertura_Assinatura(id_selo, id_pessoa);

                if (id_ato != 0) {

                    // gravando novo lançamento de Abertura de Assinatura na tabela LANÇAMENTOS
                    Lancamento_Controller gravar_lancamento = new Lancamento_Controller();
                    gravar_lancamento.salvarNovoLancamento(id_selo, Codigo_Atos_Model.CODIGO_ABERTURA_ASSINATURA, "Cartão de assinatura", custo_ato, id_ato);

                    // desatiblitando botao vincular
                    btnVincularFicha.setEnabled(false);
                    campoNumeroFicha.setEditable(false);

                } else {

                    btnVincularFicha.requestFocus();
                }

            } else {
                btnVincularFicha.requestFocus();;
            }
        } else {
            btnVincularFicha.requestFocus();;
        }

    }//GEN-LAST:event_btnVincularFichaActionPerformed

    private void check_Nao_DeclaradoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_check_Nao_DeclaradoActionPerformed

        if (check_Nao_Declarado.isSelected()) {
            campoPai.setText("Não Declarado");
        } else {
            campoPai.setText("");
        }
    }//GEN-LAST:event_check_Nao_DeclaradoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Metal".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Abertura_Assinatura_View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Abertura_Assinatura_View().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel JPDadosPessoais;
    private javax.swing.JPanel JPFicha;
    private javax.swing.JButton btnAddFicha;
    public static javax.swing.JButton btnConfirmarAlteracao;
    private javax.swing.JButton btnCopiar;
    private javax.swing.JButton btnImprimirFicha;
    private javax.swing.JButton btnLocalizar;
    private javax.swing.JButton btnSair;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JButton btnVincularFicha;
    public static javax.swing.JTextField campoBairro;
    public static javax.swing.JFormattedTextField campoCPF;
    private javax.swing.JTextField campoCidadeNascimento;
    public static javax.swing.JTextField campoCidadeResidencia;
    public static javax.swing.JTextField campoComplemento;
    private javax.swing.JFormattedTextField campoCusto;
    public static javax.swing.JFormattedTextField campoDataExpedicao;
    public static javax.swing.JFormattedTextField campoDataNascimento;
    public static javax.swing.JTextField campoDestinoCopiaFicha;
    public static javax.swing.JTextField campoEndereco;
    public static javax.swing.JTextField campoID;
    public static javax.swing.JTextField campoIdentidade;
    public static javax.swing.JTextField campoMae;
    public static javax.swing.JTextField campoNome;
    public static javax.swing.JTextField campoNumeroFicha;
    public static javax.swing.JTextField campoOrgaoExpeditor;
    private javax.swing.JTextField campoOrigemFicha;
    public static javax.swing.JTextField campoPai;
    private javax.swing.JTextField campoProfissao;
    private javax.swing.JTextField campoProximoSelo;
    private javax.swing.JTextField campoSelo;
    private javax.swing.JCheckBox check_Nao_Declarado;
    private javax.swing.JComboBox<String> comboEstadoCivil;
    private javax.swing.JComboBox<String> comboEstadoNascimento;
    public static javax.swing.JComboBox comboEstadoResidencia;
    private javax.swing.JComboBox<String> comboNacionalidade;
    private javax.swing.JComboBox<String> comboSexo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JToolBar.Separator jSeparator2;
    private javax.swing.JToolBar.Separator jSeparator3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JLabel lblData;
    // End of variables declaration//GEN-END:variables
}
